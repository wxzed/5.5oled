/**********************************************************
* @ File name -> iic.h
* @ Version   -> V1.1.1
* @ Date      -> 12-10-2013
* @ Brief     -> MCU模拟IIC通讯函数头文件
* @           -> 要改变传输频率，请修改延时函数中的数值即可

 V1.1
* @ Revise    -> A、修正兼容夸平台移植
* @           -> B、修正接收数据时错位BUG 

 V1.1.1
* @ Revise    -> 增加是否使用延时函数调整通讯频率宏定义  
**********************************************************/

#ifndef _iic_h_ 
#define _iic_h_

/**********************************************************
                     外部函数头文件                        
**********************************************************/

#include "STM32_config.h"

/**********************************************************
                    对于低速晶振的支持
             是否使用延时函数进行调整通讯频率
**********************************************************/

#define USER_DELAY_CLK					1	//定义了则使用延时调整通讯频率
											//0：不使用延时函数调整通讯频率，对于低速时候用
											//1：使用延时函数调整通讯频率，对于高速时候用

/**********************************************************
                      定义模拟接口
                所接的IO不一样请修改这里
    设置IO的方向请修改这里，对于不是具有准双向IO的MCU
**********************************************************/

#define IIC_SCL					PBout(6)
#define IIC_SDA					PBout(7)	//IIC发送数据用
#define IN_SDA					PBin(7)	//IIC读取数据用

//改变SDA所接的IO输入/输出

#define IIC_SDA_IN()			{GPIOB->CRL &= 0x0fffffff;GPIOB->CRL |= 0x80000000;}	//设置为输入模式或者开漏模式（外加上拉）
#define IIC_SDA_OUT()			{GPIOB->CRL &= 0x0fffffff;GPIOB->CRL |= 0x30000000;}	//设置成准双向或者推挽输出，最大速度50MHz

/**********************************************************
                    通讯频率延时函数
          需要调整通讯频率的请修改此函数值即可
**********************************************************/

#ifdef	USER_DELAY_CLK	//定义了则使用

	#define IIC_Delay()                 delay_us(2) //要改变请修改delay_us()中的数值即可

#endif

/**********************************************************
                        外部功能函数
**********************************************************/

void IIC_GPIO_Init(void);	//GPIO初始化

void IIC_Start(void);	//IIC启动

void IIC_Stop(void);	//IIC停止

void IIC_Ack(u8 a);	//主机向从机发送应答信号

u8 IIC_Write_Byte(u8 dat);	//向IIC总线发送一个字节数据

u8 IIC_Read_Byte(void);	//从IIC总线上读取一个字节数据

#endif

